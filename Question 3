import random
import math

# Define loss functions
def mse(predict, target):
    return (predict - target) ** 2

def mae(predict, target):
    return abs(predict - target)

def rmse(predict, target):
    return (predict - target) ** 2

def main():
    # Get the number of samples from the user
    num_samples = input("Input number of samples (integer number) which are generated: ")
    
    # Check if num_samples is a valid integer
    if not num_samples.isnumeric():
        print("number of samples must be an integer number")
        return
    
    num_samples = int(num_samples)
    
    # Get the loss function name from the user
    loss_function_name = input("Input loss name:").strip().upper()

    # Initialize total loss
    total_loss = 0
    
    # Generate random predictions and targets, and calculate loss
    for i in range(num_samples):
        predict = random.uniform(0, 10)
        target = random.uniform(0, 10)
        
        if loss_function_name == "MSE":
            loss = mse(predict, target)
        elif loss_function_name == "MAE":
            loss = mae(predict, target)
        elif loss_function_name == "RMSE":
            loss = rmse(predict, target)
        
        total_loss += loss
        print(f"loss name {loss_function_name}, sample {i}, pred: {predict}, target = {target}, loss = {loss}")
    
    # Calculate the average loss
    if loss_function_name == "RMSE":
        average_loss = math.sqrt(total_loss / num_samples)
    else:
        average_loss = total_loss / num_samples
    
    print(f"final {loss_function_name}: {average_loss}")

# Run the main function
if __name__ == "__main__":
    main()
